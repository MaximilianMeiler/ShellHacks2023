[["0",{"pageContent":"test\n(lp\ntest\n-\nV\nl\nrtualBox\n: -\n /Downloads/arm64_stretch \n□ \nX \nFile \nEdit \nView \nSearch \nTerminal \nHelp \nSta\nr\nttng \nLogtn \nServtce \n... \n[ \n] \nStarted \nSyste~ \nL\noggtng \nServtce. \n[ \n] \nSta\nr\nted \nL\nogtn \nServtce\n. \n[ \n30.667603] \nI\n Pv6: \nADDRCONF(NETDEV_UP): \nenp0s2: \nltnk \nts \nno\n t \nr\neady \n[ \n30.669381] \ne1000: \nenp0s2 \nN\nI\n C \n L\ntnk \nts \nUp \n1000 \nMbps \nFull \nDuplex, \nFlow \nCon\nt\nrol\n: \nRX \n[ \n30.672764] \nI\n Pv6: \nADDRCONF(NETDEV\n_\nCHANGE): \nenp0s2: \nltnk \nbeco~es \nready \n[ \n] \nSta\nr\nted \nRatse \nnetwork \ntnterfaces. \n[ \n] \nReached \ntarge\nt \nNe\nt\nwo\nr\nk. \nSta\nr\nttng \nOpenBSD \nSecure \nShell \nserver \n... \nSta\nr\nttng \nPer~tt \nUser \nSesstons \n. .\n. \nSta\nr\nted \nPer~t\nt \nUser \nSesstons\n. \nStarted \nSertal \nGe\nt\nty \non \nt\n t\nyAMA0\n. \nSta\nr\nted \nGet\n t\n y \non \nt\ntyl. \nReached \nta\nrge\nt \nL\nogtn \nPro~p\nt\n s\n . \nSta\nr\nted \nOpe\nn\nBSD \nSecu\n r\n e \nShell \nserve\nr\n . \nReached \ntarge\nt \nMultt-Use\nr \nSyste~. \nReached \ntarge\nt \nG\nr\n ap\n h\ntcal \nI\nnter\nf\nace\n. \nSta\nr\nttng \nUpda\nt\n e \nU\nT\nMP \nabout \nSyste~ \nRunlevel \nChanges \n... \nSta\nr\nted \nUpdate \nUTMP \nabout \nSyste~ \nRunlevel \nChanges\n . \nDebtan \nGNU/Ltnux \n9 \ndebtan-aarch64 \nttyAMA0 \ndebtan-aarch64 \nlogtn: \nARM Emulator Setup (Unix) \n1. \n \nDownload  the  latest \n \nversion  of  QEMU:  \na. \n \nFor Ubuntu/Debian, \n \nrun \n \n“\nsudo \n \napt \n \ninstall \n \nqemu-system-arm” \nb. \n \nFor Arch/Manjaro, \n \nrun \n \n“\nsudo \n \npacman \n \n-S qemu-arch-extra” \nc. \n \nFor other distros, \n \ninstall \n \nwhatever package \n \n“\ncontains qemu-system-aarch64”. \n \n2. \n \nDownload \n \nthe \n \npre-compiled \n \nARM \n \nimage \n \nand \n \nscripts: \n \nhttps://drive.google.com/file/d/1C12uSIH37IZQgV9X0am8pBpwsP1laumL/view?usp=sharing\n3. \n \nUnzip \n \n“\nqemu-arm-img.zip”. \n \n4. \n \nNavigate \n \nto \n \nthe \n \nextracted \n \nfolder \n \nin \n \nthe \n \nterminal. \n \n5. \n \nNavigate \n \nto \n \nthe \n \nfolder “Unix Scripts” \n \nin \n \nthe \n \nterminal. \n \n6. \n \nRun \n \nthe \n \nfollowing \n \ncommands: \n \na. \n \n“\nchmod \n \n+x start.sh” \n \nb. \n \n“\nchmod \n \n+x connect.sh” \nc. \n \n“\nchmod","metadata":{"loc":{"lines":{"from":1,"to":345}}}}],["1",{"pageContent":"to \n \nthe \n \nfolder “Unix Scripts” \n \nin \n \nthe \n \nterminal. \n \n6. \n \nRun \n \nthe \n \nfollowing \n \ncommands: \n \na. \n \n“\nchmod \n \n+x start.sh” \n \nb. \n \n“\nchmod \n \n+x connect.sh” \nc. \n \n“\nchmod \n \n+x transfer.sh” \n \n7. \n \nNow, \n \nrun \n \nthe \n \nemulator \n \nfor \n \nthe \n \nfrst \n \ntime. \n \na. \n \nRun \n \nthe \n \nfollowing \n \ncommand: \n \n“\n./start.sh” \nb. \n \nWait \n \nfor \n \nthis screen: \n \n8. \n \nNow \n \nthe \n \nemulator \n \nis running; \n \nall \n \nthat’s \n \nleft \n \nis connecting \n \nto \n \nit. \n \na. \n \nOpen \n \na \n \nnew \n \nterminal \n \nwindow \n \nand \n \nnavigate \n \nagain \n \nto \n \nthe \n \nfolder “Unix Scripts”. \n \nb. \n \nRun \n \nthe \n \nfollowing \n \ncommand: \n \n“\n./connect.sh”","metadata":{"loc":{"lines":{"from":345,"to":482}}}}],["2",{"pageContent":"test\n@>\ntest-VirtualBox\n: \n-\nFile \nEdit \nView \nSearch \nT\nerminal \nH\nelp \ntest@test-VlrtualBox\n:\n -\n S \nssh \nroot@localhost \n-\np \n3101 \nD \nX \nThe \nauthentlclty \nof \nhos\n t \n'[localhost]\n:\n 3101 \n([127.0.0.1):3101)' \ncan't \nbe \nestablls \nhed\n . \nECDSA \nkey \nflnge\nr\nprlnt \nls \nSHA256\n:\n 0GzhkE9k\n I\nSKA+U8vhpuw9lbMUURFQMZp6f7dTj12Df8\n. \nAre \nyou \nsure \nyou \nwant \nto \ncontlnue \nconnectlng \n(yes/no)? \nyes \nWarnlng\n : \nPerManently \nadded \n'[localhost]:3101' \n(ECDSA) \nto \nthe \nllst \nof \nknown \nhosts \nroot@localhost's \npassword: \nLlnux \ndeblan\n-\naarch64 \n4\n .\n9.0\n-\n4\n-\narM64 \n#1 \nSMP \nDeblan \n4\n .\n 9\n .\n65\n-\n 3+deb9ul \n(2017\n -\n12\n-\n 23) \naa \nrch64 \nThe \nprograMs \nlncluded \nwlth \nthe \nDeblan \nGNU/\nL\nlnux \nsysteM \nare \nfree \nsoftware; \nthe \nexact \ndlstrlbutlon \nt\n erMs \nfor \neach \nprograM \nare \ndescribed \nln \nthe \nlndlvldual \nflles \nln \n/usr/share/doc/*/copyrlght\n. \nDeblan \nGNU/Llnux \ncoMes \nwlth \nABSOLUTELY \nNO \nWARRANTY, \nto \nthe \nextent \nperMltted \nby \nappllcable \nlaw\n . \nLast \nlogln: \nT\nhu \nJan \n10 \n11:52\n:\n29 \n2019 \nf\nroM \n10.0.2.2 \nroot@deblan\n -\naarch64\n:\n-# \nI \nc. \n \nWait  for \n \nthe  script  to  prompt \n \nyou  for the  password  \nd. \n \nEnter “root” \n \nas the  password.  \ne. \n \nThis should  lead  to  the  following  screen. \n \nIf \n \nyou  see  this, \n \nyour \n \nemulator is set \n \nup!  \nCredits: \n“\nHugsy” for the Debian aarch64 image \nBoris E-Spektor for the Linux instructions and images","metadata":{"loc":{"lines":{"from":1,"to":195}}}}],["3",{"pageContent":"Data Transfer and Loops Example Problems","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["4",{"pageContent":"CDA 3101","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["5",{"pageContent":"February 1, 2023","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["6",{"pageContent":"ARM ISA: D-format instruction","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["7",{"pageContent":"STRUCTURE OF A D-format INSTRUCTION","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["8",{"pageContent":"LDUR X9, [X10, #40]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["9",{"pageContent":"The value in X10 is an address in memory, add 40 to it, place the value found at that place in memory into register X9","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["10",{"pageContent":"STUR X7, [X12, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["11",{"pageContent":"Place the data in register X7 at the address in memory found in register X12","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["12",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["13",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x0000000000000000\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["14",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13","metadata":{"loc":{"lines":{"from":1,"to":10}}}}],["15",{"pageContent":"What are the contents of X11 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["16",{"pageContent":"LDUR X11, [X9, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["17",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["18",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x0000000000000000\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["19",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13","metadata":{"loc":{"lines":{"from":1,"to":10}}}}],["20",{"pageContent":"What are the contents of X11 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["21",{"pageContent":"LDUR X11, [X9, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["22",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["23",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x0000000000000000\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["24",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13","metadata":{"loc":{"lines":{"from":1,"to":10}}}}],["25",{"pageContent":"What are the contents of X11 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["26",{"pageContent":"LDUR X11, [X9, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["27",{"pageContent":"Big end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["28",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["29",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["30",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13","metadata":{"loc":{"lines":{"from":1,"to":10}}}}],["31",{"pageContent":"What are the contents of X11 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["32",{"pageContent":"LDUR X11, [X9, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["33",{"pageContent":"Big end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["34",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["35",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x11325892C65B32A1\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["36",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13","metadata":{"loc":{"lines":{"from":1,"to":10}}}}],["37",{"pageContent":"What are the contents of X11 after the following instruction is executed if little endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["38",{"pageContent":"LDUR X11, [X9, #0]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["39",{"pageContent":"Little end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["40",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["41",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x11325892C65B32A1\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["42",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x13\n0x8000000000000009  0x00\n0x800000000000000A  0x00\n0x800000000000000B  0x00","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["43",{"pageContent":"What are the contents of memory after the following instruction is executed if little endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["44",{"pageContent":"STURW X11, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["45",{"pageContent":"Little end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["46",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["47",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0x11325892C65B32A1\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["48",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0xA1\n0x8000000000000009  0x32\n0x800000000000000A  0x5B\n0x800000000000000B  0xC6","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["49",{"pageContent":"What are the contents of memory after the following instruction is executed if little endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["50",{"pageContent":"STURW X11, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["51",{"pageContent":"Little end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["52",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["53",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["54",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["55",{"pageContent":"What are the contents of memory after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["56",{"pageContent":"STURW X11, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["57",{"pageContent":"Big end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["58",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["59",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x0000000000000000\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["60",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["61",{"pageContent":"What are the contents of X10 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["62",{"pageContent":"LDURSW X10, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["63",{"pageContent":"Sign extend","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["64",{"pageContent":"Big end","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["65",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["66",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x????????92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["67",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["68",{"pageContent":"What are the contents of X10 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["69",{"pageContent":"LDURSW X10, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["70",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["71",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x????????92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["72",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["73",{"pageContent":"X10 is to contain a signed word, this means it represents a two’s complement signed integer","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["74",{"pageContent":"What are the contents of X10 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["75",{"pageContent":"LDURSW X10, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["76",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["77",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0x????????92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["78",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["79",{"pageContent":"X10 is to contain a signed word, this means it represents a two’s complement signed integer","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["80",{"pageContent":"to accurately represent the 32-bit signed integer in 64 bits, we have to sign extend bit 31","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["81",{"pageContent":"What are the contents of X10 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["82",{"pageContent":"LDURSW X10, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["83",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["84",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0xFFFFFFFF92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["85",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["86",{"pageContent":"0x9 in binary is 1001, therefore bit 31 is a 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["87",{"pageContent":"Therefore bits 32-63 are 1’s","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["88",{"pageContent":"0xF in binary is 1111.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["89",{"pageContent":"11111111111111111111111111111111 = 0xFFFFFFFF","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["90",{"pageContent":"What are the contents of X10 after the following instruction is executed if big endian storage is used?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["91",{"pageContent":"LDURSW X10, [X9, #8]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["92",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["93",{"pageContent":"Register     Data\nX1           0x0000000000000000\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0xFFFFFFFF92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["94",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["95",{"pageContent":"What are the contents of X1 after the following instruction is executed?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["96",{"pageContent":"LDURB X1, [X9, #9]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["97",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["98",{"pageContent":"Register     Data\nX1           0x0000000000000058\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0xFFFFFFFF92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["99",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["100",{"pageContent":"What are the contents of X1 after the following instruction is executed?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["101",{"pageContent":"LDURB X1, [X9, #9]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["102",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["103",{"pageContent":"Register     Data\nX1           0x0000000000000058\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0xFFFFFFFF92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["104",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x32\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["105",{"pageContent":"What are the contents of memory after the following instruction is executed?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["106",{"pageContent":"STURB X1, [X9, #10]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["107",{"pageContent":"Little Endian and Big Endian","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["108",{"pageContent":"Register     Data\nX1           0x0000000000000058\nX2           0x0000000000000000\nX3           0x0000000000000000\nX4           0x0000000000000000\nX5           0x0000000000000000\nX6           0x0000000000000000\nX7           0x0000000000000000\nX8           0x0000000000000000\nX9           0x8000000000000000\nX10          0xFFFFFFFF92583211\nX11          0xA1325BC692583211\n…..          ….","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["109",{"pageContent":"Memory Address      Data\n0x8000000000000000  0xA1\n0x8000000000000001  0x32\n0x8000000000000002  0x5B\n0x8000000000000003  0xC6\n0x8000000000000004  0x92\n0x8000000000000005  0x58\n0x8000000000000006  0x32\n0x8000000000000007  0x11\n0x8000000000000008  0x92\n0x8000000000000009  0x58\n0x800000000000000A  0x58\n0x800000000000000B  0x11","metadata":{"loc":{"lines":{"from":1,"to":13}}}}],["110",{"pageContent":"What are the contents of memory after the following instruction is executed?","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["111",{"pageContent":"STURB X1, [X9, #10]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["112",{"pageContent":"ARM ISA: CB-format instruction","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["113",{"pageContent":"STRUCTURE OF A CB-format INSTRUCTION","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["114",{"pageContent":"CBZ X9, MyLabel","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["115",{"pageContent":"If register X9 contains zero, branch to the instruction labeled MyLabel","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["116",{"pageContent":"CBNZ X9, MyLabel","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["117",{"pageContent":"If register X9 contains something other than zero, branch to the instruction labled MyLabel","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["118",{"pageContent":"Write ARM instructions corresponding to the following C code:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["119",{"pageContent":"(assume x is in register X9)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["120",{"pageContent":"if (x==14)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["121",{"pageContent":"x=x+1;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["122",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["123",{"pageContent":"x=x*2;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["124",{"pageContent":"Write ARM instructions corresponding the following C code:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["125",{"pageContent":"(assume x is in register X9)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["126",{"pageContent":"if (x==14)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["127",{"pageContent":"x=x+1;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["128",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["129",{"pageContent":"x=x*2;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["130",{"pageContent":"add x10, xzr, xzr","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["131",{"pageContent":"addi x10, x10, #14  //put 14 in x10","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["132",{"pageContent":"sub x11, x10, x9","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["133",{"pageContent":"cbnz x11, else   //if x10 does not equal x9, then x11 is not zero","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["134",{"pageContent":"addi x9, x9, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["135",{"pageContent":"b exit","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["136",{"pageContent":"else: lsl x9, x9, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["137",{"pageContent":"exit:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["138",{"pageContent":"Assuming variable i is in x22 and variable j is in x23, x is in x19, y is in x20, write C code that corresponds to the following ARM instructions:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["139",{"pageContent":"SUB X9, X22, X23","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["140",{"pageContent":"CBNZ X9, Else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["141",{"pageContent":"ADD x19, x19, x20","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["142",{"pageContent":"B exit","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["143",{"pageContent":"Else: SUB x19, x19, x20","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["144",{"pageContent":"Exit: #this is a comment.  More ARM code follows.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["145",{"pageContent":"Assuming variable i is in x22 and variable j is in x23, x is in x19, y is in x20, write C code that corresponds to the following ARM instructions:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["146",{"pageContent":"SUB X9, X22, X23","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["147",{"pageContent":"CBNZ X9, Else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["148",{"pageContent":"ADD x19, x19, x20","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["149",{"pageContent":"B exit","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["150",{"pageContent":"Else: SUB x19, x19, x20","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["151",{"pageContent":"Exit: #this is a comment.  More ARM code follows.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["152",{"pageContent":"if (i==j)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["153",{"pageContent":"x = x+y","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["154",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["155",{"pageContent":"x = x-y;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["156",{"pageContent":"Flag    Condition\nN       Negative number – 1 in most significant bit of result\nZ       Result is zero\nV       Overflow – the result of a signed operation results in overflow\nC       Carry out of most significant bit – unsigned overflow","metadata":{"loc":{"lines":{"from":1,"to":5}}}}],["157",{"pageContent":"SUBS X21, X17, X19","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["158",{"pageContent":"If X21 is zero, Z set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["159",{"pageContent":"If X21 is negative N is set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["160",{"pageContent":"If X21 overflows (number is bigger than what is possible in a 64 bit signed integer) V is set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["161",{"pageContent":"(more information on overflow in a few weeks)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["162",{"pageContent":"C doesn’t come into play because this is a signed operation","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["163",{"pageContent":"Flag    Condition Code Test\nEQ      Z=1\nNE      Z=0\nLT      N!=V\nGT      N=V","metadata":{"loc":{"lines":{"from":1,"to":5}}}}],["164",{"pageContent":"Flag    Condition\nN       Negative number – 1 in most significant bit of result\nZ       Result is zero\nV       Overflow – the result of a signed operation results in overflow\nC       Carry out of most significant bit – unsigned overflow","metadata":{"loc":{"lines":{"from":1,"to":5}}}}],["165",{"pageContent":"SUBS X21, X17, X19","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["166",{"pageContent":"If X21 is zero, Z set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["167",{"pageContent":"If X21 is negative N is set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["168",{"pageContent":"If X21 overflows (number is bigger than what is possible in a 64 bit signed integer) V is set to 1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["169",{"pageContent":"(more information on overflow in a few weeks)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["170",{"pageContent":"C doesn’t come into play because this is a signed operation","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["171",{"pageContent":"Flag    Condition Code Test\nEQ      Z=1\nNE      Z=0\nLT      N!=V\nGT      N=V","metadata":{"loc":{"lines":{"from":1,"to":5}}}}],["172",{"pageContent":"SUBS X21, X17, X19","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["173",{"pageContent":"B.EQ   LABEL       -> IF X17==X19 go to LABEL","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["174",{"pageContent":"B.NE   LABEL       -> IF X17!=X19 go to LABEL","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["175",{"pageContent":"B.LT    LABEL       -> IF X17<X19 go to LABEL","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["176",{"pageContent":"B.GT   LABEL\t-> IF X17>X19 to to LABEL","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["177",{"pageContent":"Write ARM instructions corresponding the following C code:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["178",{"pageContent":"(assume x is in register X9, y is in register X10)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["179",{"pageContent":"if (x<=14)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["180",{"pageContent":"y=1;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["181",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["182",{"pageContent":"y=2;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["183",{"pageContent":"add X10, XZR, XZR","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["184",{"pageContent":"add X14, XZR, XZR","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["185",{"pageContent":"addi X14, X14, #14","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["186",{"pageContent":"subs X11, X9, X14","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["187",{"pageContent":"b.gt ELSE","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["188",{"pageContent":"add  X10, X10, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["189",{"pageContent":"b EXIT","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["190",{"pageContent":"ELSE: \tadd X10, X10, #2","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["191",{"pageContent":"EXIT:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["192",{"pageContent":"Write ARM instructions corresponding the following C code:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["193",{"pageContent":"(assume x is in register X9, n is in X10)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["194",{"pageContent":"x=1;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["195",{"pageContent":"for (i=2; i<=n; i++)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["196",{"pageContent":"x=x+x;","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["197",{"pageContent":"add X9, XZR, XZR","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["198",{"pageContent":"add X11, XZR, XZR","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["199",{"pageContent":"addi X9, X9, #1   //x=1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["200",{"pageContent":"addi X11, X11, #2 //i=2","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["201",{"pageContent":"Loop:\t\tsubs X12, X11, X10","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["202",{"pageContent":"b.gt  Exit","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["203",{"pageContent":"add X9, X9, X9","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["204",{"pageContent":"addi, X11, X11, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["205",{"pageContent":"b Loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["206",{"pageContent":"Exit:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["207",{"pageContent":"Write ARM instructions corresponding to the following C code.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["208",{"pageContent":"Assume n is in X9, base address for a is in X10, base address for b is in X11, base address for c is in X12","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["209",{"pageContent":"for (i=0; i<n; i++)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["210",{"pageContent":"if (a[i] <= b[i])","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["211",{"pageContent":"c[i] = a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["212",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["213",{"pageContent":"c[i]=b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["214",{"pageContent":"Write ARM instructions corresponding to the following C code.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["215",{"pageContent":"Assume n is in X9, base address for a is in X10, base address for b is in X11, base address for c is in X12","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["216",{"pageContent":"for (i=0; i<n; i++)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["217",{"pageContent":"if (a[i] <= b[i])","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["218",{"pageContent":"c[i] = a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["219",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["220",{"pageContent":"c[i]=b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["221",{"pageContent":"#establish variable i in x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["222",{"pageContent":"add x13, xzr, xzr","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["223",{"pageContent":"#set up the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["224",{"pageContent":"loop:  sub x14, x9, x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["225",{"pageContent":"cbz x14, exit         #if i==n, exit the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["226",{"pageContent":"exit:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["227",{"pageContent":"Write ARM instructions corresponding to the following C code.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["228",{"pageContent":"Assume n is in X9, base address for a is in X10, base address for b is in X11, base address for c is in X12","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["229",{"pageContent":"for (i=0; i<n; i++)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["230",{"pageContent":"if (a[i] <= b[i])","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["231",{"pageContent":"c[i] = a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["232",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["233",{"pageContent":"c[i]=b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["234",{"pageContent":"#establish variable i in x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["235",{"pageContent":"add x13, xzr, xzr","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["236",{"pageContent":"#set up the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["237",{"pageContent":"loop:  sub x14, x9, x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["238",{"pageContent":"cbz x14, exit         #if i==n, exit the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["239",{"pageContent":"#set up variables a[i], b[i], c[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["240",{"pageContent":"lsl x15, x13, #3        #x15 is i*8, the byte offset from the base address","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["241",{"pageContent":"ldur x17, [x10, x15]   #x17 contains a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["242",{"pageContent":"ldur x19, [x11, x15]   #x19 contains b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["243",{"pageContent":"exit:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["244",{"pageContent":"Write ARM instructions corresponding to the following C code.","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["245",{"pageContent":"Assume n is in X9, base address for a is in X10, base address for b is in X11, base address for c is in X12","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["246",{"pageContent":"for (i=0; i<n; i++)","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["247",{"pageContent":"if (a[i] <= b[i])","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["248",{"pageContent":"c[i] = a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["249",{"pageContent":"else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["250",{"pageContent":"c[i]=b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["251",{"pageContent":"#establish variable i in x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["252",{"pageContent":"add x13, xzr, xzr","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["253",{"pageContent":"#set up the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["254",{"pageContent":"loop:  sub x14, x9, x13","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["255",{"pageContent":"cbz x14, exit         #if i==n, exit the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["256",{"pageContent":"#set up variables a[i], b[i], c[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["257",{"pageContent":"cbz x14, exit         #if i==n, exit the loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["258",{"pageContent":"#set up variables a[i], b[i], c[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["259",{"pageContent":"lsl x15, x13, #3        #x15 is i*8, the byte offset from the base address","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["260",{"pageContent":"ldur x17, [x10, x15]   #x17 contains a[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["261",{"pageContent":"ldur x19, [x11, x15]   #x19 contains b[i]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["262",{"pageContent":"subs x21, x17, x19  //set flags with x17 and x19","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["263",{"pageContent":"b.gt else","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["264",{"pageContent":"stur x17, [x12, x15]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["265",{"pageContent":"addi x13, x13, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["266",{"pageContent":"b loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["267",{"pageContent":"else: \tstur x19, [x12, x15]","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["268",{"pageContent":"addi x13, x13, #1","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["269",{"pageContent":"b loop","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["270",{"pageContent":"exit:","metadata":{"loc":{"lines":{"from":1,"to":1}}}}],["271",{"pageContent":"DJ \nOpenSSH \nSSH \nclient \n□ \nC:\\Users\\Na:haniel \nEdgar\\Downloads\\qemu-arm-img\\~indows \nScrip:s>ssh \nroo:@localhos: \n- p \n3101 \nroo:@localhos:\n·s \npassword: \nLinux \ndebian-aarch64 \n4.9.0-4-arm64 \n#1 \nS~P \nDebian \n4.9.65-3-deb9ul \n(2017-12-23) \naarch64 \n- he \nprograms \nincluded \nwi:h \n:he \nDebian \nGNU/Linux \nsys:em \nare \nfree \nsof:ware; \n:he \nexac: \ndis:ribu:ion \n:e\nrms \nfor \neach \np rogram \nare \ndescribed \nin \n:he \nindividual \nfiles \nin \n/usr/share/doc/\"/copyrigh:. \nDebian \nGNU/Linux \ncomes \nwi:h \nABSCLU-ELV \nNC \n~ARRAN-v, \n:o \n:he \nex:en: \npermi::ed \nby \napplicable \nlaw. \nLas: \nlogin: \n~ed \nCc: \n9 \n13\n:04:\n12 \n2019 \nfrom \n10.0.2.2 \nroo:@debian-aarch64:~# \nls \n,,O\nr\"<dir' \nroo:@debian-aarch64:~# \ncd \nwor<dir \nroo:@debian-aarch64:~1wor<dir# \nls \n:::.s \nroo:@debian-aarch64:~1wor<dir# \nX \nARM Emulator Use \n1. \n \nStart \n the \n emulator as outlined \n in  the \n installation \n guides. \n \n2. \n \nCode \n \nyour ARM \n \nprogram in \n \nyour editor \n \nof \n \nchoice. \n \n3. \n \nSave \n the \n .s  file   in  “qemu-arm-img/workdir”. \n \n4. \n \nWindows: \n \na. \n \nNavigate \n to  “Windows Scripts”. \n \nb. \n \nRun \n “transfer.bat”. \n \nc. \n \nBypass SmartScreen \n \nas outlined \n \nin \n \nthe \n \ninstallation \n \nguides. \n \nd. \n \nEnter “root” \n as the \n password \n when \n prompted. \n \n5. \n \nLinux \na. \n \nNavigate \n in  the \n terminal \n to  “Unix \n Scripts”. \n \nb. \n \nRun \n the \n following \n command: \n “./transfer.sh” \nc. \n \nEnter “root” \n \nas the \n \npassword \n \nwhen \n \nprompted. \n \n6. \n \nAll f\n \niles present \n \non \n \nyour \n \nlocal PC i\n \n \nn \n \n“qemu-arm-img/workdir” will n\n \now b\n \ne \n \npresent \n \nin \n \na \n \ndirectory called \n \n“workdir” \n \non \n \nyour emulator, \n \nsimilar to \n \nthe \n \nbelow \n \nimage: \n \n7. \n \nTo \n \ncompile \n \nyour \n \nprogram, \n \nrun \n \nthe \n \nfollowing \n \ncommand: \n \n“gcc -o \n \n<program name> \n \n<filename>.s -g” \na. \n \n“-o \n \n<program \n \nname>” \n \ndetermines the \n \nname \n \nof \n \nthe \n \nresulting \n \nexecutable \n \nb. \n \n“<filename>.s” \n \nspecifies which \n \nARM source \n \nfile \n \nto","metadata":{"loc":{"lines":{"from":1,"to":280}}}}],["272",{"pageContent":"<filename>.s -g” \na. \n \n“-o \n \n<program \n \nname>” \n \ndetermines the \n \nname \n \nof \n \nthe \n \nresulting \n \nexecutable \n \nb. \n \n“<filename>.s” \n \nspecifies which \n \nARM source \n \nfile \n \nto \n \nattempt \n \nto \n \nassemble \n \nc. \n \n“-g” \n \nlinks the \n \nprogram \n \nfor debugging","metadata":{"loc":{"lines":{"from":280,"to":327}}}}],["273",{"pageContent":"roo:@debian\n-aa\nrch64:~/~or<dir# \n.;::: \n~e\nlcorne \n:o \n-\nic\n--ac--oe\n: \n:n\ni:ializing \n... \nP\nlayer \n1, \n~ha: \nis \nyou\nr \nmove? \nr\n0\n00-::@debian\n- aa \nr\"c \nh64: \n\"'/ \nlJO \nr\" \n<\ndi \nr# \npOlJe \nroff \n_ \n8. \nThe result should look something like this: \n9. \nNow to run your program, run “./<program name>”, like so: \n10. \nWhen you are finished with your program, you can type Ctrl+C/Cmd+C to exit. \n11. \nWhen you are finished with the emulator, \nr\nun the command “poweroff” \nin the \nemulator window: \nThis step ensures that the emulator gracefully exits, and no data is lost.","metadata":{"loc":{"lines":{"from":1,"to":50}}}}],["274",{"pageContent":"roo:\n@de\nb\nian-aarc\nh6\n4\n:~/l\n•\nio\nr<dir# \ng db \n::: \nGNU \ng db \n(Oeb\nia\nn \n7.12-6\n) \n7.12.0.20161007-g\ni: \nCopy\nrig\nh: \n(C\n) \n2016 \nFree \nSof:l\n•ia\nre \nFo\nun\nda:io\nn, \n:nc. \nLice\nnse \nGP\nLv3~: \nGNU \nGP\nL \nve\nrsio\nn \n3  o\nr \nla:er \n<h::p://gnu.o\nrg\n/\nlice\nnses/gp\nl.\nh:m\nl> \n-h\nis  is \nf\nree \nsof:l\n•ia\nre\n:   you \na\nre \nf\nree \n:o \nchange \nan\nd \nredis:ri\nbu:e \ni:. \n-he\nre \nis \nNC \nhA\nRRAN-v, \n:o \n:he \nex:en: \npe\nr m\ni::ed \nby \nla\nl•i. \n-ype \n''shol\n•i \ncopy\ni ng \nan\nd \n''shol\n•i  l   •ia\nrra\nn:y'' \nfo\nr \nde:ails. \n-h\nis \nGOB \nl•\nias \nconf\nig\nu\nred \nas \n''aa\nrc\nh6\n4-li\nnux-gnu''. \n-ype \n''shol\n•i \nconf\nig\nu\nra:io\nn'' \nfo\nr \nconf\nig\nu\nra:io\nn \nde:ails. \nFor \nbug \nre\npo\nr:i\nng \ni\nns:\nr\nuc:\nio\nns, \np\nlease \nsee: \n<h::p:iil\n•\nil\n·\nil\n·\ni.gnu.o\nrg\n/sof:l\n•ia\nre\n/g\nd\nb/bugs/\n>. \nFi\nnd \n:he \nGOB \nmanua\nl \nan\nd \no:he\nr \ndoc\numen:a:\nio\nn \nreso\nu\nrces \non\nli\nne \na:: \n<h::p:iil\n•\nil\n·\nil\n·\ni.gnu.o\nrg\n/sof:l\n•ia\nre\n/g\nd\nb/\ndoc\numen:a:\nio\nn/\n>. \nFor \nhe\nl\np, \n:ype \n''he\nl\np''. \n-ype \n''ap\nro\npos \nl•\nio\nrd'' \n:o \nsea\nrc\nh \nfo\nr \ncomman\nds \nrela:ed \n:o \n''l•\nio\nrd'' \n... \nRea\ndi\nng \nsymbo\nls \nf\nro\nm::: \n... \ndo\nne. \n(g\ndb ) \n_ \nig\ndb ,   b \nma\ni n \nB\nrea<\npo\ni\nn: \n1 \na: \n0xOb8: \nf\nile \n:::.s, \nli\nne \n10. \nig\ndb ,  _ \nig\ndb ,   s \n20 \nb l \np\nri\nn:f \n1g\nd b , \nARM\n \nDebugging\n \nAt some point, your program will likely fail \nto compile, and you will need \nto do some debugging. \nHere is a simple primer to \n“\ngdb\n”\n, the debugging tool bundled with your emulator. \n1. \nIn the same directory on your emulator as your \npro\ngram, run the following: \n“\ngdb \n<program name>\n”\n \n2. \nThe result shou\nld be similar to the \nfollowing: \n3. \nTo set a breakpoint, run \n“\nb <\nlabel name\n”\n: \n4. \nTo begin running the program, run \n“\nr\n”\n: \n5. \nTo step through the program, run \n“\ns\n”\n: \n6. \nTo view the \ncurrent register values, run \n“\ni\nr\n”\n:","metadata":{"loc":{"lines":{"from":1,"to":330}}}}],["275",{"pageContent":",gdb; \ni \nr \nx0 \nxl \nx2 \nx3 \nx4 \nx3 \nx6 \nx7 \nx8 \nx9 \nx10 \nxll \nx12 \nxE \nx14 \nxi; \nx16 \nx17 \nx18 \nx19 \nx20 \nx21 \nx22 \nxn \nx24 \nx2; \nx26 \nx27 \nx28 \nx29 \nx30 \nsp \npc \ncpsr \nfpsr \nfpcr \n1 \ngdb \ni \n0xaaaaaaabb0 \n1 \n187649 \n34;4 \n7;3 \n0xfffffffffc \n8 \n281474 \n7670 \n720 \n0xfffffffffc \n8 \n281474 \n7670 \n736 \n0xaaaaaaaaa9 \n8 \n187649 \n8447 \n448 \n0xfffffffffb \n8 \n281474 \n7670 \n496 \n0x0 \n0 \n0x0 \n0 \n0x10 \n16 \n0xffffffffffffffff \n-1 \n0x3fff \n16383 \n0x101010101010101 \n72340172838076673 \n0x10 \n16 \n0xffffb7fff030 \n2814737687470;6 \n0xffffb7fff028 \n281473768747048 \n0x0 \n0 \n0x80d \n2061 \n0xffffb7ea7288 \n281473767338632 \n0xaaaaaaabb010 \n187649984540688 \n0x40941 \n264;13 \n0xaaaaaaaaaca0 \n0x0 \n0 \n0xaaaaaaaaa820 \n0x0 \n0 \n0x0 \n0 \n0x0 \n0 \n0x0 \n0 \n0x0 \n0 \n0x0 \n0 \n0x0 \n0 \n0xfffffffffb20 \n0xffffb7ea7364 \n0xfffffffffb20 \n0xaaaaaaaaa96c \n0x60200000 \n0x0 \n0 \n0x0 \n0 \n187649984474272 \n187649984473120 \n281474976709408 \n281473767338852 \n0xfffffffffb20 \n0xaaaaaaaaa96c \n<main-4> \n[ \nEL=0 \nSSC \nZ \n: \n1gdb! \nx1l6xb \n$sp \n0xfffffffffb20: \n0x00 \n0x00 \n0x00 \n0x00 \n0x00 \n0x00 \n0x00 \n0x00 \n0xfffffffffb28: \n0x54 \n0xa8 \n0xaa \n0xaa \n0xaa \n0xaa \n0x00 \n0x00 \n(gdb!\n. \n(gdb) \nr \n- he \nprogram \nbeing \ndebugged \nhas \nbeen \ns:ar:ed \nalready. \nS:ar: \ni: \nfrom \n:he \nbeginning? \n(y \nor \nn) \ny \nS:ar:ing \nprogram: \n/roo:/~or<dir/::: \nBrea<poin: \n1, \n19 \n(gdb) \nmain \n() \na: \n:::.s:19 \nldr \nx0, \n=~elcome\nPromp: \n7. \nTo view \n16 bytes of memory starting a\nt \nthe stack pointer, run \n“\nx/16xb $sp\n”\n: \n8. \nDetailed format instruction\ns for the memory view command \n“\nx/\n”\n \nare here: \nhttps://sourceware.org/gdb/onlinedocs/gdb/Memory.html \n9. \nTo restar\nt the program from your \nbreakpoint, run \n“\nr\n”\n \nagain: \n10. \nWhen you are done debugging, run \n“\nquit\n”\n \nto exit\n:","metadata":{"loc":{"lines":{"from":1,"to":226}}}}],["276",{"pageContent":"db )   q\nu\ni: \nA \nde\nbugg\ni ng \nsess\nio\nn \nis \nac:\ni\nve. \n:nfe\nrior \n1 \n[ p\nrocess \n676\n: \nl•i\nill \nbe \n<\nilled. \nQu\ni: \nany\nl•iay? \n(y \nor \nn ) \ny \nroo:\n@\nde\nb\nia\nn-aa\nrc\nh64\n:~\ntl\n·\ni\n□\nr<dir#","metadata":{"loc":{"lines":{"from":1,"to":48}}}}],["277",{"pageContent":"CDA3101 COURSE SYLLABUS\n\n\nWELCOME TO THE COURSE\n\nTu 3-4:55pm Carleton Auditorium\n\nTh 4:05-4:55pm Carleton Auditorium\n\nThis class will provide you with knowledge and insight into how computers work.\n At the end of this class, you will be able to read a specification sheet for a\ncomputer and know what all the parameters mean. Your learning experience will\ninclude videos, online textbook activities, writing ARM assembly language\nprograms, and completing a cache simulation.\n\nIf you would like a PDF version of this syllabus, please click here:\nHWCOE-CDA3101-Spring2023.pdf\n[https://canvas.instructure.com/courses/1016~471300/files/1016~75197470?verifier=dyv7WsncISROXFNZHq65kHwJsuxdUR2TBuQu0cQA&wrap=1]\n\n\n COURSE DESCRIPTION\n\nThis course focuses on the organization of computing systems. In this course,\nyou will learn about:\n\n\n * Organization of computing systems.\n * Logical basis of computer structure.\n * Machine representation of instructions and data, flow of control, and basic\n   machine instructions.\n * Assembly language programming.\n\n\n COURSE OBJECTIVES\n\nBy the end of this course, you will be able to:\n\n 1. Calculate computer performance.\n 2. Represent simple high level language programs in ARM.\n 3. Represent ARM assembly language instructions in binary machine instructions.\n 4. Describe and demonstrate the use of stack frames for saving local variables.\n 5. Represent integers and floating-point numbers in binary.\n 6. Trace the execution of ARM instructions through simple single cycle and\n    pipelined datapaths.\n 7. Distinguish between direct mapped, set associative, and fully associative\n    cache designs.\n\n\n COURSE REQUIREMENTS\n\nREQUIRED TEXTBOOK","metadata":{"loc":{"lines":{"from":1,"to":51}}}}],["278",{"pageContent":"COURSE REQUIREMENTS\n\nREQUIRED TEXTBOOK\n\nThe required textbook for this course will be the zyBooks version of Patterson &\nHennessy. Computer Organization and Design: ARM Edition. Morgan Kaufmann (ISBN\n978-1-394-11658-4). You must purchase the zyBooks version of this text as your\nparticipation grade will be assessed through its use. For instructions on how to\naccess zyBooks, please see the Orientation Module, under Key Course Elements\nhere\n[https://canvas.instructure.com/courses/1016~471300/pages/course-orientation].\n\nZYBOOKS CODE FOR THE CURRENT SEMESTER:\n\nUFLCDA3101ReschSpring2023\n\n \n\nPREREQUISITES\n\nTo take this course, you must have completed the following courses:\n\n * COP 3504 or COP 3503\n * MAC 2233, MAC 2311 or MAC 3472\n * COT 3100\n\n \n\nMINIMUM TECHNOLOGY REQUIREMENTS\n\nThe University of Florida expects students entering an online program to acquire\ncomputer hardware and software appropriate to their degree program. Most\ncomputers are capable of meeting the following general requirements. A student’s\ncomputer configuration should include:\n\n * Webcam\n * Microphone\n * Broadband connection to the Internet and related equipment (Cable/DSL modem)\n * Microsoft Office Suite installed (provided by the university)\n\nIndividual colleges may have additional requirements or recommendations, which\nstudents should review before starting their program.\n\nStudents should be able to download and install an application on their\ncomputer.  \n\nStudents should be familiar with using the Linux command line interface.\n\nZOOM\n\nZoom is an easy-to-use video conferencing service available to all UF students,\nfaculty, and staff that allows for meetings of up to 100 participants.\n\nYou can find resources and help using Zoom at the University of Florida's Zoom\n[https://ufl.zoom.us/] website.\n\n\n COURSE POLICIES\n\nMAKE-UP POLICY\n\n\nExamlets and the Final Exam may not be made up.  There is one dropped Examlet.  \n\n \n\nLATE POLICY","metadata":{"loc":{"lines":{"from":51,"to":117}}}}],["279",{"pageContent":"COURSE POLICIES\n\nMAKE-UP POLICY\n\n\nExamlets and the Final Exam may not be made up.  There is one dropped Examlet.  \n\n \n\nLATE POLICY\n\nProgramming Assignments, Cache Analysis Assignment, and Buffer Overflow\nAssignment may be turned in up to four days late with a late penalty of 10\npoints per day.  \n\n \n\nHONESTY POLICY\n\n\nYour code for your Programming Assignments and the Analysis Assignments must be\nyour own.  You may discuss assignments with others, but copy/pasting code from\nother students or online resources is strictly prohibited. We will be using\nTurnItIn to check for plagiarism. \n\nYour writing and graphs for the Cache Analysis Assignment must be your own. \nCopy/pasting writing and/or graphs from other students is strictly prohibited.\n\nYou may discuss and draw out algorithms for the assignments with other\nstudents.  You may not copy code from another student.\n\nEXAMLETS AND FINAL EXAM\n\n\nExamlets and the Final Exam are taken on Honorlock on during the 4:05-4:55pm\nclass period on scheduled day for the examlet.  For Examlets and the Final Exam,\nstudents may use the Leg reference sheet and one other printed reference sheet.\n\nThe Final Exam is May 5 10:30am-12:30pm\n\nTaking the examlet or Final Exam at other than the scheduled time requires a\nuniversity approved excuse and must be arranged before the date of the examlet\nor Final Exam.\n\nExamlets and Final Exam may not be made up.  There is a dropped examlet.\n\nDISCUSSION OF GRADES\n\n\nGrades on any assignment may be discussed with me via email or in office hours\nup to seven days after the grade was released.\n\n \n\nEXTRA CREDIT\n\n\nUp to two extra credit assignments may be completed.  Each assignment will be\nworth 1% of your grade.  The extra credit will be added manually to your grade\nat the end of the course.  \n\nETIQUETTE EXPECTATIONS","metadata":{"loc":{"lines":{"from":117,"to":178}}}}],["280",{"pageContent":"ETIQUETTE EXPECTATIONS\n\nPlease communicate in a professional manner in email, on Microsoft Teams, and in\nCanvas Discussions.  Guidelines can be found here.\n[http://%E2%80%AFhttps://www.cise.ufl.edu/wp-content/uploads/2019/08/CISE_Netiquette_Guide.pdf]\n\n\n GRADING POLICY\n\nWe will make every effort to have each assignment graded and posted within one\nweek of the due date. However, due to the large number of students in each\nsection of this course, returning grades\n\n \n\nCOURSE GRADING POLICY\n\nAssignment Points Examlets (6, 1 drop) 30% Programming Assignments 22% Buffer\nOverflow Assignment 10% Cache Analysis Assignment 10% zyBooks  Activities 8%\nFinal Exam 20% Total 100%\n\n \n\nGRADING SCALE\n\nPercent\n\nGrade\n\nGrade Points\n\n93 - 100\n\nA\n\n4.00\n\n90.0 - 92.99\n\nA-\n\n3.67\n\n87 - 89.99\n\nB+\n\n3.33\n\n83 - 86.99\n\nB\n\n3.00\n\n80.0 - 82.99\n\nB-\n\n2.67\n\n77 - 79.99\n\nC+\n\n2.33\n\n73 - 76.99\n\nC\n\n2.00\n\n70.0 - 72.99\n\nC-\n\n1.67\n\n67 - 69.99\n\nD+\n\n1.33\n\n63 - 66.99\n\nD\n\n1.00\n\n60.0 - 63.99\n\nD-\n\n0.67\n\n0 - 59.99\n\nE\n\n0.00\n\nSee the current UF grading policies\n[https://catalog.ufl.edu/ugrad/current/regulations/info/grades.aspx] for more\ninformation.\n\n\n COURSE EVALUATIONS","metadata":{"loc":{"lines":{"from":178,"to":286}}}}],["281",{"pageContent":"1.00\n\n60.0 - 63.99\n\nD-\n\n0.67\n\n0 - 59.99\n\nE\n\n0.00\n\nSee the current UF grading policies\n[https://catalog.ufl.edu/ugrad/current/regulations/info/grades.aspx] for more\ninformation.\n\n\n COURSE EVALUATIONS\n\nStudents are expected to provide professional and respectful feedback on the\nquality of instruction in this course by completing course evaluations online\nvia GatorEvals. Guidance on how to give feedback in a professional and\nrespectful manner is available on the GatorEvals Providing Constructive Feedback\n[https://gatorevals.aa.ufl.edu/students/] FAQ page. Students will be notified\nwhen the evaluation period opens and can complete evaluations through the email\nthey receive from GatorEvals, in their Canvas course menu under GatorEvals, or\nvia the GatorEvals [https://ufl.bluera.com/ufl/] website. Summaries of course\nevaluation results are available to students at the GatorEvals Public Results\n[https://gatorevals.aa.ufl.edu/public-results] page. More information about UF's\ncourse evaluation system can be found at the GatorEvals Faculty Evaluations\n[https://gatorevals.aa.ufl.edu/] website.\n\n\n TIPS FOR SUCCESS\n\n\nTaking a course online can be a lot of fun! Here are some tips that will help\nyou get the most of this course while taking full advantage of the online\nformat:","metadata":{"loc":{"lines":{"from":286,"to":326}}}}],["282",{"pageContent":"TIPS FOR SUCCESS\n\n\nTaking a course online can be a lot of fun! Here are some tips that will help\nyou get the most of this course while taking full advantage of the online\nformat:\n\n * Schedule \"class times\" for yourself. It is important to do the coursework on\n   time each week. You will receive a reduction in points for work that is\n   turned in late!\n * Read ALL of the material contained on this site. There is a lot of helpful\n   information that can save you time and help you meet the objectives of the\n   course.\n * Print out the Course Summary located in the Course Syllabus and check things\n   off as you go.\n * Take full advantage of the online discussion boards. Ask for help or\n   clarification of the material if you need it.\n * Do not wait to ask questions! Waiting to ask a question might cause you to\n   miss a due date.\n * Do your work well before the due dates. Sometimes things happen. If your\n   computer goes down when you are trying to submit an assignment, you'll need\n   time to troubleshoot the problem.\n * To be extra safe, back up your work to an external hard drive, thumb drive,\n   or through a cloud service.\n\n\n UF POLICIES\n\n\nUNIVERSITY POLICY ON ACCOMMODATING STUDENTS WITH DISABILITIES\n\nStudents with disabilities requesting accommodations should first register with\nthe Disability Resource Center [https://disability.ufl.edu/] (352-392-8565) by\nproviding appropriate documentation.  Once registered, students will receive an\naccommodation letter that must be presented to the instructor when requesting\naccommodation.  Students with disabilities should follow this procedure as early\nas possible in the semester.\n\n \n\nUNIVERSITY POLICY ON ACADEMIC CONDUCT","metadata":{"loc":{"lines":{"from":326,"to":366}}}}],["283",{"pageContent":"UNIVERSITY POLICY ON ACADEMIC CONDUCT\n\nUF students are bound by The Honor Pledge, which states, “We, the members of the\nUniversity of Florida community, pledge to hold ourselves and our peers to the\nhighest standards of honesty and integrity by abiding by the Honor Code.  On all\nwork submitted for credit by students at the University of Florida, the\nfollowing pledge is either required or implied: \"On my honor, I have neither\ngiven nor received unauthorized aid in doing this assignment.\" The Student Honor\nCode and Student Conduct Code\n[https://sccr.dso.ufl.edu/policies/student-honor-code-student-conduct-code/]\nspecifies a number of behaviors that are in violation of this code and the\npossible sanctions. Furthermore, you are obligated to report any condition that\nfacilitates academic misconduct to appropriate personnel.  If you have any\nquestions or concerns, please consult with the instructor or TAs in this class.\n\n \n\nPLAGIARISM\n\nThe Student Honor Code and Student Conduct Code\n[https://sccr.dso.ufl.edu/policies/student-honor-code-student-conduct-code/]\nstates that a Student must not represent as the Student’s own work all or any\nportion of the work of another. Plagiarism includes but is not limited to:\n\n * Stealing, misquoting, insufficiently paraphrasing, or patch-writing.\n * Self-plagiarism is the reuse of the Student’s own submitted work, or the\n   simultaneous submission of the Student’s own work, without the full and clear\n   acknowledgment and permission of the Faculty to whom it is submitted.\n * Submitting materials from any source without proper attribution.\n * Submitting a document, assignment, or material that, in whole or in part, is\n   identical or substantially identical to a document or assignment the Student\n   did not author.\n\n\n SOFTWARE USE","metadata":{"loc":{"lines":{"from":366,"to":400}}}}],["284",{"pageContent":"SOFTWARE USE\n\n\nAll faculty, staff, and students of the University are required and expected to\nobey the laws and legal agreements governing software use. Failure to do so can\nlead to monetary damages and/or criminal penalties for the individual violator.\nBecause such violations are also against University policies and rules,\ndisciplinary action will be taken as appropriate. We, the members of the\nUniversity of Florida community, pledge to uphold ourselves and our peers to the\nhighest standards of honesty and integrity.\n\n\n PRIVACY AND ACCESSIBILITY POLICIES\n\n\nThere are federal laws protecting your privacy with regards to grades earned in\ncourses and on individual assignments. For more information, please visit the\nRegistrar's explanation of your Ferpa rights here\n[https://registrar.ufl.edu/ferpa/].\n\nFor information about the privacy policies of the tools used in this course, see\nthe links below:\n\n * Instructure (Canvas)\n   * Instructure Privacy Policy [https://www.instructure.com/policies/privacy]\n   * Instructure Accessibility\n     [https://www.instructure.com/canvas/accessibility]\n * Zoom\n   * Zoom Privacy Policy [https://zoom.us/privacy]\n   * Zoom Accessibility [https://zoom.us/accessibility]\n * Honorlock\n   * Honorlock Privacy Policy [https://honorlock.com/student-privacy-statement/]\n   * Honorlock Accessibility [https://honorlock.com/accessibility-statement/]\n * Zybooks\n   * Zybooks Privacy [https://www.zybooks.com/privacy-policy/]\n   * Zybooks Accessibility\n     [http://%E2%80%AFhttps://www.zybooks.com/accessibility/%E2%80%AF]\n\n\n COMMITMENT TO A SAFE AND INCLUSIVE LEARNING ENVIRONMENT","metadata":{"loc":{"lines":{"from":400,"to":439}}}}],["285",{"pageContent":"COMMITMENT TO A SAFE AND INCLUSIVE LEARNING ENVIRONMENT\n\n\nThe Herbert Wertheim College of Engineering values broad diversity within our\ncommunity and is committed to individual and group empowerment, inclusion, and\nthe elimination of discrimination. It is expected that every person in this\nclass will treat one another with dignity and respect regardless of gender,\nsexuality, disability, age, socioeconomic status, ethnicity, race, and culture.\n\nIf you feel like your performance in class is being impacted by discrimination\nor harassment of any kind, please contact your instructor or any of the\nfollowing:\n\n * Your academic advisor or Graduate Program Coordinator\n * Jennifer Nappo, Director of Human Resources, 352-392-0904, jpennacc@ufl.edu\n   [jpennacc@ufl.edu]\n * Curtis Taylor, Associate Dean of Student Affairs, 352-392-2177,\n   taylor@eng.ufl.edu [taylor@eng.ufl.edu]\n * Toshikazu Nishida, Associate Dean of Academic Affairs, 352-392-0943,\n   nishida@eng.ufl.edu [nishida@eng.ufl.edu]\n\n\n GETTING HELP\n\n\nTECHNICAL DIFFICULTIES\n\nFor help with technical issues or difficulties with Canvas, please contact the\nUF Help Desk at:\n\n * http://helpdesk.ufl.edu [http://helpdesk.ufl.edu]\n * (352) 392-HELP (4357)\n * Walk-in: HUB 132\n\nAny requests for make-ups due to technical issues should be accompanied by the\nticket number received from the Help Desk when the problem was reported to them.\nThe ticket number will document the time and date of the problem. You should\nemail your instructor within 24 hours of the technical difficulty if you wish to\nrequest a make-up.\n\n \n\nHEALTH AND WELLNESS","metadata":{"loc":{"lines":{"from":439,"to":481}}}}],["286",{"pageContent":"HEALTH AND WELLNESS\n\n * U Matter, We Care: If you or someone you know is in distress, please email\n   umatter@ufl.edu, call 352-392-1575, or visit U Matter We Care\n   [http://umatter.ufl.edu/] to refer or report a concern, and a team member\n   will reach out to the student in distress.\n * Counseling and Wellness Center:  Visit the UF Counseling & Wellness Center\n   [http://counseling.ufl.edu/] website or call 352-392-1575 for information on\n   crisis services and non-crisis services.\n * Student Health Care Center: Call 352-392-1161 for 24/7 information to help\n   you find the care you need, or visit the UF Student Health Care Center\n   [http://shcc.ufl.edu] website.\n * University Police Department: Visit the UF Police Department\n   [http://police.ufl.edu/] website or call 352-392-1111 (or 9-1-1 for\n   emergencies).\n * UF Health Shands Emergency Room/Trauma Center: For immediate medical care in\n   Gainesville, call 352-733-0111, or go to the emergency room at 1515 SW Archer\n   Road, Gainesville, FL 32608; Visit the UF Health Shands Emergency Room/Trauma\n   Center [http://ufhealth.org/emergency-room-trauma-center] website.\n\n\n ACADEMIC AND STUDENT SUPPORT\n\n\n * Career Connections Center: For career assistance and counseling services,\n   visit the UF Career Connections Center [http://career.ufl.edu/] website or\n   call 352-392-1601.\n * Library Support:  For various ways to receive assistance concerning using the\n   libraries or finding resources, visit the UF George A. Smathers Libraries\n   Ask-A-Librarian [http://cms.uflib.ufl.edu/ask] website.\n * Teaching Center: For general study skills and tutoring, visit the UF Teaching\n   Center [http://teachingcenter.ufl.edu/] website or call 352-392-2010.\n * Writing Studio: For help with brainstorming, formatting, and writing papers,\n   visit the University Writing Program Writing Studio\n   [http://writing.ufl.edu/writing-studio/] website or call 352-846-1138.","metadata":{"loc":{"lines":{"from":481,"to":515}}}}]]